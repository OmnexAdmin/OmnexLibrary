<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="4" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="996715" started-at="2020-03-19T11:34:37Z" finished-at="2020-03-19T11:51:14Z">
    <groups>
      <group name="regression">
        <method signature="DummyTestcase.requestDraft(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.DummyTestcase@144fc21]" name="requestDraft" class="TestCases.DummyTestcase"/>
      </group> <!-- regression -->
    </groups>
    <test name="Default test" duration-ms="996715" started-at="2020-03-19T11:34:37Z" finished-at="2020-03-19T11:51:14Z">
      <class name="TestCases.DummyTestcase">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:TestCases.DummyTestcase@144fc21]" name="beforeSuite" is-config="true" duration-ms="4148" started-at="2020-03-19T17:04:33Z" finished-at="2020-03-19T17:04:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:TestCases.DummyTestcase@144fc21]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-03-19T17:04:37Z" finished-at="2020-03-19T17:04:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="setData()[pri:0, instance:TestCases.DummyTestcase@144fc21]" name="setData" is-config="true" duration-ms="0" started-at="2020-03-19T17:04:37Z" finished-at="2020-03-19T17:04:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setData -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.DummyTestcase@144fc21]" name="beforeMethod" is-config="true" duration-ms="6057" started-at="2020-03-19T17:04:38Z" finished-at="2020-03-19T17:04:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="requestDraft(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.DummyTestcase@144fc21]" name="requestDraft" duration-ms="93258" started-at="2020-03-19T17:04:44Z" data-provider="fetchData" finished-at="2020-03-19T17:06:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[bh]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[R1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[All Approvers Reqd(1 round,2 approvers)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[(VH1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestDraft -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.DummyTestcase@144fc21]" name="afterMethod" is-config="true" duration-ms="1717" started-at="2020-03-19T17:06:17Z" finished-at="2020-03-19T17:06:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.DummyTestcase@144fc21]" name="beforeMethod" is-config="true" duration-ms="5953" started-at="2020-03-19T17:06:19Z" finished-at="2020-03-19T17:06:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="requestDraft(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.DummyTestcase@144fc21]" name="requestDraft" duration-ms="282856" started-at="2020-03-19T17:06:25Z" data-provider="fetchData" finished-at="2020-03-19T17:11:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[bh]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[R2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1st round non mandatory  2nd Round with All Approvers Reqd]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[(VH1)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[FAILED]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: FAILED
	at Utilities.Reporter.reportStep(Reporter.java:33)
	at Utilities.Reporter.reportStep(Reporter.java:43)
	at CommonMethods.SeMethods.click(SeMethods.java:158)
	at docProPages.Routes.createRoute(Routes.java:171)
	at TestCases.DummyTestcase.requestDraft(DummyTestcase.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestDraft -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.DummyTestcase@144fc21]" name="afterMethod" is-config="true" duration-ms="1165" started-at="2020-03-19T17:11:08Z" finished-at="2020-03-19T17:11:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.DummyTestcase@144fc21]" name="beforeMethod" is-config="true" duration-ms="4891" started-at="2020-03-19T17:11:09Z" finished-at="2020-03-19T17:11:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="requestDraft(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.DummyTestcase@144fc21]" name="requestDraft" duration-ms="449552" started-at="2020-03-19T17:11:14Z" data-provider="fetchData" finished-at="2020-03-19T17:18:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[bh]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[R3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2 rounds with some mandatory and some non mandatory and mentioned mim number of approvers reqd]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[(VH]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[FAILED]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: FAILED
	at Utilities.Reporter.reportStep(Reporter.java:33)
	at Utilities.Reporter.reportStep(Reporter.java:43)
	at CommonMethods.SeMethods.click(SeMethods.java:158)
	at docProPages.Routes.createRoute(Routes.java:235)
	at TestCases.DummyTestcase.requestDraft(DummyTestcase.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestDraft -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.DummyTestcase@144fc21]" name="afterMethod" is-config="true" duration-ms="1226" started-at="2020-03-19T17:18:44Z" finished-at="2020-03-19T17:18:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.DummyTestcase@144fc21]" name="beforeMethod" is-config="true" duration-ms="5409" started-at="2020-03-19T17:18:45Z" finished-at="2020-03-19T17:18:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="requestDraft(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.DummyTestcase@144fc21]" name="requestDraft" duration-ms="142723" started-at="2020-03-19T17:18:50Z" data-provider="fetchData" finished-at="2020-03-19T17:21:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[bh]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[R4]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1 round having 2 approvers and another round has position based approvers]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[(VH)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Doc Pro Position based Approver]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[FAILED]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: FAILED
	at Utilities.Reporter.reportStep(Reporter.java:33)
	at Utilities.Reporter.reportStep(Reporter.java:43)
	at CommonMethods.SeMethods.type(SeMethods.java:137)
	at docProPages.Routes.createRoute(Routes.java:268)
	at TestCases.DummyTestcase.requestDraft(DummyTestcase.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestDraft -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.DummyTestcase@144fc21]" name="afterMethod" is-config="true" duration-ms="1184" started-at="2020-03-19T17:21:13Z" finished-at="2020-03-19T17:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:TestCases.DummyTestcase@144fc21]" name="afterTest" is-config="true" duration-ms="0" started-at="2020-03-19T17:21:14Z" finished-at="2020-03-19T17:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:TestCases.DummyTestcase@144fc21]" name="afterSuite" is-config="true" duration-ms="464" started-at="2020-03-19T17:21:14Z" finished-at="2020-03-19T17:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- TestCases.DummyTestcase -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
